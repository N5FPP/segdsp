//+build !noasm
//+build !appengine

package {PACKAGE}

import (
  "unsafe"
)

//go:noescape
func _firFilter{SUBARCHTITLE}(result, input, taps unsafe.Pointer, lengthTaps, length uint)

//go:noescape
func _firFilterDecimate{SUBARCHTITLE}(result, input, taps unsafe.Pointer, decimate, lengthTaps, length uint)

func FirFilter{SUBARCHTITLE}(input []complex64, output []complex64, taps []float32) {{
  var inputPtr = unsafe.Pointer(&input[0])
  var outputPtr = unsafe.Pointer(&output[0])
  var tapsPtr = unsafe.Pointer(&taps[0])

  var iLen = uint(len(input))
  var oLen = uint(len(output))
  var tLen = uint(len(taps))

  var workLen = iLen

  if workLen > oLen {{
    workLen = oLen
  }}

  _firFilter{SUBARCHTITLE}(outputPtr, inputPtr, tapsPtr, tLen, workLen)
}}

func FirFilterDecimate{SUBARCHTITLE}(decimation uint, input []complex64, output []complex64, taps []float32) {{
  var inputPtr = unsafe.Pointer(&input[0])
  var outputPtr = unsafe.Pointer(&output[0])
  var tapsPtr = unsafe.Pointer(&taps[0])

  var iLen = uint(len(input))
  var oLen = uint(len(output))
  var tLen = uint(len(taps))

  var workLen = iLen

  if workLen > oLen {{
    workLen = oLen
  }}

  _firFilterDecimate{SUBARCHTITLE}(outputPtr, inputPtr, tapsPtr, decimation, tLen, workLen)
}}
